
  // const priceSort = () => {
  //   if (priceFilter === "LTH") {
  //     props.setTransactions(
  //       [...props.transactions].sort((a, b) => a.Price - b.Price)
  //     );
  //   } else if (priceFilter === "HTL") {
  //     props.setTransactions(
  //       [...props.transactions].sort((a, b) => b.Price - a.Price)
  //     );
  //   } else if (priceFilter === "nosort") {
  //     props.setTransactions([...props.transactions]);
  //   }
  // };

  // const categorySort = () => {
  //   if (categoryFilter === "nosort") {
  //     props.setTransactions([...props.transactions]);
  //   } else {
  //     const filteredTransactions = props.transactions.filter(
  //       (item) => item.Category === categoryFilter
  //     );
  //     // console.log("Filtered Transactions:", filteredTransactions);
  //     props.setTransactions(filteredTransactions);
  //   }
  // };

  // const sort = () => {
  //   if (filter === "LTH") {
  //     return props.setTransactions(
  //       [...props.transactions].sort((a, b) => a.Price - b.Price)
  //     );
  //   } else if (filter === "HTL") {
  //     return props.setTransactions(
  //       [...props.transactions].sort((a, b) => b.Price - a.Price)
  //     );
  //   } else if (filter === "nosort") {
  //     return props.setTransactions([...props.transactions]);
  //   } else {
  //     return props.setTransactions(props.transactions.filter((item) => item.Category === filter)
  //     );
  //     // console.log("Filtered Transactions:", filteredTransactions);
  //   }
  // };


// const handleCategorySort = (e) => {
  //   // console.log("Selected Category:", e.target.value);
  //   setCategoryFilter(e.target.value);
  //   categorySort();
  // };


    // useEffect(() => {
  //   const savedTransactions = localStorage.getItem("transactions");
  //   if (savedTransactions) {
  //     setTransactions(JSON.parse(savedTransactions));
  //   }
  // }, []);

    // else{
    //   return []
    // }

      {/* {isLoggedIn && (
            <Route
              exact
              path="Create"
              element={
                <Input
                  transactions={transactions}
                  setTransactions={setTransactions}
                  isLoggedIn={isLoggedIn}
                />
              }
            />
          )} */}

// <>
    //   {props.isLoggedIn === true ? (
    //     <div className="input-div">
    //       <h2 className="input-div-heading">Add Item</h2>
    //       <label className="Title input-heading">
    //         Title: <nbsp />
    //         <input
    //           type="text"
    //           value={title}
    //           onChange={(e) => setTitle(e.target.value)}
    //         />
    //       </label>

    //       <label className="category input-heading">
    //         Category: <nbsp />
    //         <select
    //           value={category}
    //           onChange={(e) => setcategory(e.target.value)}
    //           className="category-options"
    //         >
    //           <option>Books</option>
    //           <option>Gifts</option>
    //           <option>Clothes</option>
    //           <option>Cosmetics</option>
    //           <option>Furniture</option>
    //         </select>
    //       </label>

    //       <label className="description input-heading">
    //         Description: <nbsp />
    //         <input
    //           type="text"
    //           value={description}
    //           onChange={(e) => setdescription(e.target.value)}
    //         />
    //       </label>

    //       <label className="price input-heading">
    //         Price: <nbsp />
    //         <input
    //           type="number"
    //           value={price}
    //           onChange={(e) => setprice(e.target.value)}
    //         />
    //       </label>

    //       <label className="quantity input-heading">
    //         Quantity: <nbsp />
    //         <select
    //           value={quantity}
    //           onChange={(e) => setquantity(e.target.value)}
    //           className="quantity-options"
    //         >
    //           <option>1</option>
    //           <option>2</option>
    //           <option>3</option>
    //           <option>4</option>
    //           <option>5</option>
    //           <option>6</option>
    //         </select>
    //       </label>
    //       <button className="add-button" onClick={handleClick}>
    //         Add
    //       </button>
    //     </div>
    //   ) : (
    //     <div>{alert("Please Login")}</div>
    //   )}
    // </>

    
{
  /* // <Route exact path="/" element={<Login />} /> */
}

{
  /* <Route
            exact
            path="/Create"
            element={
              <Input
                transactions={transactions}
                setTransactions={setTransactions}
              />
            }
          />
          <Route
            exact
            path="/List"
            element={
              <List
                transactions={transactions}
                setTransactions={setTransactions}
              />
            }
          /> */
}
